<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sym</groupId>
    <artifactId>hmily-dubbo-TCC</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>facade</module>
        <module>abcBank-service</module>
    </modules>
    <packaging>pom</packaging>

    <name>hmily-dubbo-TCC</name>
    <description>基于hmily实现的分布式事务, 使用TCC协议</description>

    <properties>
        <hmily.version>2.0.5-RELEASE</hmily.version>
        <curator.version>2.13.0</curator.version>
        <dubbo.version>2.6.8</dubbo.version>
        <aspectjweaver.version>1.7.4</aspectjweaver.version>
        <spring.data.jpa.version>1.11.23.RELEASE</spring.data.jpa.version>
        <hibernate.version>4.3.9.Final</hibernate.version>
        <java.persistence.version>1.0.0.Final</java.persistence.version>
        <slf4j-api.version>1.7.22</slf4j-api.version>
        <logback-classic.version>1.1.6</logback-classic.version>
        <mysql-connector.version>5.1.44</mysql-connector.version>
        <hikari.version>3.4.5</hikari.version>
        <junit.version>4.12</junit.version>
        <lombok.version>1.18.10</lombok.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.8</jdk.version>
    </properties>

    <dependencies>
        <!-- hmily for dubbo -->
        <dependency>
            <groupId>org.dromara</groupId>
            <artifactId>hmily-annotation</artifactId>
            <version>${hmily.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dromara</groupId>
            <artifactId>hmily-core</artifactId>
            <version>${hmily.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dromara</groupId>
            <artifactId>hmily-dubbo</artifactId>
            <version>${hmily.version}</version>
        </dependency>

        <!-- dubbo分为2.6.x和2.7.x两个分支, 一个只修复bug是以com.alibaba开头, 后一个是apache管理会开发新功能 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
            <version>${dubbo.version}</version>
        </dependency>
        <!-- dubbo版本2.6及以上的，需要使用 curator 作为操作zookeeper的客户端-->
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-recipes</artifactId>
            <version>${curator.version}</version>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.42.Final</version>
        </dependency>

        <!-- for spring-data-jpa -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectjweaver.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring.data.jpa.version}</version>
        </dependency>
        <!-- for hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>${java.persistence.version}</version>
        </dependency>

        <!-- for mysql driver -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-connector.version}</version>
        </dependency>

        <!-- for datasource -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikari.version}</version>
        </dependency>

        <!-- for logback -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>

        <!-- for test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- for lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- hmily for springCloud -->
<!--        <dependency>-->
<!--            <groupId>org.dromara</groupId>-->
<!--            <artifactId>hmily-spring-boot-starter-springcloud</artifactId>-->
<!--            <version>${hmily.version}</version>-->
<!--        </dependency>-->

        <!-- hmily for springBoot -->
<!--        <dependency>-->
<!--            <groupId>org.dromara</groupId>-->
<!--            <artifactId>hmily-spring-boot-starter-dubbo</artifactId>-->
<!--            <version>${hmily.version}</version>-->
<!--        </dependency>-->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>